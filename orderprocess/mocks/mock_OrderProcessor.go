// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/enrico5b1b4/order-service/orderprocess (interfaces: OrderProcessor)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	go_uuid "github.com/satori/go.uuid"
)

// MockOrderProcessor is a mock of OrderProcessor interface
type MockOrderProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockOrderProcessorMockRecorder
}

// MockOrderProcessorMockRecorder is the mock recorder for MockOrderProcessor
type MockOrderProcessorMockRecorder struct {
	mock *MockOrderProcessor
}

// NewMockOrderProcessor creates a new mock instance
func NewMockOrderProcessor(ctrl *gomock.Controller) *MockOrderProcessor {
	mock := &MockOrderProcessor{ctrl: ctrl}
	mock.recorder = &MockOrderProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrderProcessor) EXPECT() *MockOrderProcessorMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method
func (m *MockOrderProcessor) CreateOrder(arg0 go_uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrder indicates an expected call of CreateOrder
func (mr *MockOrderProcessorMockRecorder) CreateOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockOrderProcessor)(nil).CreateOrder), arg0)
}
